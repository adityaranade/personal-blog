#Final data for use
data.tendulkar <- data.frame(datat[-index_na_t,])
colnames(data.tendulkar) <- c("runs","position","dismissal","opposition","year")
#Check if there is any NA's
sum(is.na(data.tendulkar)) # =0 no NA
data.tendulkar$runs <- as.numeric(data.tendulkar$runs)
data.tendulkar$position <- as.numeric(data.tendulkar$position)
data.tendulkar$dismissal <- as.factor(data.tendulkar$dismissal)
data.tendulkar$opposition <- as.factor(data.tendulkar$opposition)
data.tendulkar$year <- as.factor(data.tendulkar$year)
head(data.tendulkar)
str(data.tendulkar)
# Check the distribution of runs across years
# Boxplot
ggplot(data.tendulkar,aes(x=runs,y=year))+
geom_boxplot(aes(fill=year),show.legend = FALSE)
# Ridgeline plot
ggplot(data.tendulkar,aes(x=runs,y=year))+
geom_density_ridges(aes(fill=year))+ theme_ridges() +
theme(legend.position="none")
# Check the distribution of runs across oppositions
# Boxplot
ggplot(data.tendulkar,aes(x=runs,y=opposition))+
geom_boxplot(aes(fill=opposition),show.legend = FALSE)
# Ridgeline plot
ggplot(data.tendulkar,aes(x=runs,y=opposition))+
geom_density_ridges(aes(fill=opposition))+ theme_ridges() +
theme(legend.position="none")
# Let us fire up Bayesian model for the average by year through JAGS
library(rjags)
library(plyr)
library(reshape2)
library(Rmisc)
hier_dat = list(n=nrow(data.tendulkar), y=data.tendulkar$runs,
nc=nlevels(as.factor(data.tendulkar$year)),
year=as.numeric(as.factor(data.tendulkar$year)))
0.0625
1/0.0625
hier_dat = list(n=nrow(data.tendulkar), y=data.tendulkar$runs,
nc=nlevels(as.factor(data.tendulkar$year)),
year=as.numeric(as.factor(data.tendulkar$year)))
hier_model1 = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], tau2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(50,0.0625)  #N(mean = 50, var = 16) prior
tau[c] ~ dunif(0,100)T(0,)
}
tau2 = tau*tau
sigma = 1/tau
theta ~ dnorm(50,0.0625)
}
"
hier_m1 = jags.model(textConnection(hier_model1), n.chains=3, hier_dat, quiet=TRUE)
hier_model1 = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], tau2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(50,0.0625)  #N(mean = 50, var = 16) prior
tau[c] ~ dunif(10,200)
}
tau2 = tau*tau
sigma = 1/tau
theta ~ dnorm(50,0.0625)
}
"
hier_m1 = jags.model(textConnection(hier_model1), n.chains=3, hier_dat, quiet=TRUE)
hier_r1 = coda.samples(hier_m1,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r1)
hier_model1 = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], 1/sigma2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(50,0.0625)  #N(mean = 50, var = 16) prior
sigma[c] ~ dunif(10,200)
}
sigma2 = sigma*sigma
theta ~ dnorm(50,0.0625)
}
"
hier_m1 = jags.model(textConnection(hier_model1), n.chains=3, hier_dat, quiet=TRUE)
hier_r1 = coda.samples(hier_m1,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r1)
# plot to compare posterior Test batting average by season- densities
dr = ldply(hier_r1, function(x) {as.data.frame(x)})
m = melt(dr[,grep("mu", names(dr))], variable.name="year", value.name="sample")
#par(mfrow=c(1,2))
(ggplot(m, aes(x=sample, color=year))+geom_density()+geom_vline(xintercept=47.92,col=2)+
labs(x="Batting Average in tests")+ggtitle("Test batting average by year"))
# credible intervals to compare posterior Test batting averages by year/season
ci = ddply(m, .(year), summarize, lcl=quantile(sample, .025), ucl=quantile(sample, .975))
ci$year = as.character(1989:2013)
(ggplot(ci, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.tendulkar$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
(ggplot(ci, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.tendulkar$runs),col=2)+ coord_cartesian(xlim=c(35,65)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
hier_model1 = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], 1/sigma2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(theta,1/tau2)
sigma[c] ~ dunif(10,200)
}
sigma2 = sigma*sigma
tau2 = tau*tau
theta ~ dnorm(50,0.0625) #N(mean = 50, var = 16) prior
tau ~ dunif(10,100)
}
"
hier_m1 = jags.model(textConnection(hier_model1), n.chains=3, hier_dat, quiet=TRUE)
hier_r1 = coda.samples(hier_m1,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r1)
# plot to compare posterior Test batting average by season- densities
dr = ldply(hier_r1, function(x) {as.data.frame(x)})
m = melt(dr[,grep("mu", names(dr))], variable.name="year", value.name="sample")
#par(mfrow=c(1,2))
(ggplot(m, aes(x=sample, color=year))+geom_density()+geom_vline(xintercept=47.92,col=2)+
labs(x="Batting Average in tests")+ggtitle("Test batting average by year"))
# credible intervals to compare posterior Test batting averages by year/season
ci = ddply(m, .(year), summarize, lcl=quantile(sample, .025), ucl=quantile(sample, .975))
ci$year = as.character(1989:2013)
(ggplot(ci, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.tendulkar$runs),col=2)+ coord_cartesian(xlim=c(35,65)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
(ggplot(ci, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.tendulkar$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
(ggplot(ci, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.tendulkar$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
head(dravid)
druns <- as.numeric(gsub('[*]','',dravid$Runs))
dpos <- dravid$Pos
ddism <- dravid$Dismissal
dopp <-gsub('[v ]','',dravid$Opposition)
dyear <- as.numeric(substr(dravid$`Start Date`,
nchar(dravid$`Start Date`)-4+1,
nchar(dravid$`Start Date`)))
#Index for the rows where runs are NA (did not bat)
index_na_d <- which(is.na(druns), arr.ind=TRUE)
datad <-cbind(as.numeric(druns),
as.numeric(dpos),
as.character(ddism),
as.character(dopp),
as.numeric(dyear))
#Final data for use
data.dravid <- data.frame(datad[-index_na_d,])
colnames(data.dravid) <- c("runs","position","dismissal","opposition","year")
#Check if there is any NA's
sum(is.na(data.dravid)) # =0 no NA
data.dravid$runs <- as.numeric(data.dravid$runs)
data.dravid$position <- as.numeric(data.dravid$position)
data.dravid$dismissal <- as.factor(data.dravid$dismissal)
data.dravid$opposition <- as.factor(data.dravid$opposition)
data.dravid$year <- as.factor(data.dravid$year)
# Check the data
head(data.dravid)
# Check the datatypes
str(data.dravid)
# Check the distribution of runs across years
# Boxplot
ggplot(data.dravid,aes(x=runs,y=year))+
geom_boxplot(aes(fill=year),show.legend = FALSE)
# Ridgeline plot
ggplot(data.dravid,aes(x=runs,y=year))+
geom_density_ridges(aes(fill=year))+ theme_ridges() +
theme(legend.position="none")
# Check the distribution of runs across oppositions
# Boxplot
ggplot(data.dravid,aes(x=runs,y=opposition))+
geom_boxplot(aes(fill=opposition),show.legend = FALSE)
# Ridgeline plot
ggplot(data.dravid,aes(x=runs,y=opposition))+
geom_density_ridges(aes(fill=opposition))+ theme_ridges() +
theme(legend.position="none")
hier_dat_dravid = list(n=nrow(data.dravid), y=data.dravid$runs,
nc=nlevels(as.factor(data.dravid$year)),
year=as.numeric(as.factor(data.dravid$year)))
hier_model_dravid = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], 1/sigma2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(theta,1/tau2)
sigma[c] ~ dunif(10,200)
}
sigma2 = sigma*sigma
theta ~ dnorm(50,0.0625)
tau2 = tau*tau
tau ~ dunif(10,100)
}
"
hier_m_dravid = jags.model(textConnection(hier_model_dravid), n.chains=3, hier_dat_dravid, quiet=TRUE)
hier_r_dravid = coda.samples(hier_m_dravid,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r_dravid)
# plot to compare posterior Test batting average by season- densities
dr_dravid = ldply(hier_r_dravid, function(x) {as.data.frame(x)})
m_dravid = melt(dr_dravid[,grep("mu", names(dr_dravid))], variable.name="year", value.name="sample")
#par(mfrow=c(1,2))
(ggplot(m_dravid, aes(x=sample, color=year))+geom_density()+geom_vline(xintercept=mean(data.dravid$runs),col=2)+
labs(x="Batting Average in tests")+ggtitle("Test batting average by year"))
# credible intervals to compare posterior Test batting averages by year/season
ci_dravid = ddply(m_dravid, .(year), summarize, lcl=quantile(sample, .025), ucl=quantile(sample, .975))
ci_dravid$year = as.character(1996:2012)
(ggplot(ci_dravid, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.dravid$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
#####################################################################################
# For Saurav Ganguly
# Data processing for Saurav Ganguly
head(ganguly)
gruns <- as.numeric(gsub('[*]','',ganguly$Runs))
gpos <- ganguly$Pos
gdism <- ganguly$Dismissal
gopp <-gsub('[v ]','',ganguly$Opposition)
gyear <- as.numeric(substr(ganguly$`Start Date`,
nchar(ganguly$`Start Date`)-4+1,
nchar(ganguly$`Start Date`)))
#Index for the rows where runs are NA (did not bat)
index_na_g <- which(is.na(gruns), arr.ind=TRUE)
datag <-cbind(as.numeric(gruns),
as.numeric(gpos),
as.character(gdism),
as.character(gopp),
as.numeric(gyear))
#Final data for use
data.ganguly <- data.frame(datag[-index_na_g,])
colnames(data.ganguly) <- c("runs","position","dismissal","opposition","year")
#Check if there is any NA's
sum(is.na(data.ganguly)) # =0 no NA
data.ganguly$runs <- as.numeric(data.ganguly$runs)
data.ganguly$position <- as.numeric(data.ganguly$position)
data.ganguly$dismissal <- as.factor(data.ganguly$dismissal)
data.ganguly$opposition <- as.factor(data.ganguly$opposition)
data.ganguly$year <- as.factor(data.ganguly$year)
# Check the data
head(data.ganguly)
# Check the datatypes
str(data.ganguly)
# Check the distribution of runs across years
# Boxplot
ggplot(data.ganguly,aes(x=runs,y=year))+
geom_boxplot(aes(fill=year),show.legend = FALSE)
# Ridgeline plot
ggplot(data.ganguly,aes(x=runs,y=year))+
geom_density_ridges(aes(fill=year))+ theme_ridges() +
theme(legend.position="none")
# Check the distribution of runs across oppositions
# Boxplot
ggplot(data.ganguly,aes(x=runs,y=opposition))+
geom_boxplot(aes(fill=opposition),show.legend = FALSE)
# Ridgeline plot
ggplot(data.ganguly,aes(x=runs,y=opposition))+
geom_density_ridges(aes(fill=opposition))+ theme_ridges() +
theme(legend.position="none")
hier_dat_ganguly = list(n=nrow(data.ganguly), y=data.ganguly$runs,
nc=nlevels(as.factor(data.ganguly$year)),
year=as.numeric(as.factor(data.ganguly$year)))
hier_model_ganguly = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], 1/sigma2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(theta,1/tau2)
sigma[c] ~ dunif(10,200)
}
sigma2 = sigma*sigma
theta ~ dnorm(50,0.0625)
tau2 = tau*tau
tau ~ dunif(10,100)
}
"
hier_m_ganguly = jags.model(textConnection(hier_model_ganguly), n.chains=3, hier_dat_ganguly, quiet=TRUE)
hier_r_ganguly = coda.samples(hier_m_ganguly,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r_ganguly)
# plot to compare posterior Test batting average by season- densities
dr_ganguly = ldply(hier_r_ganguly, function(x) {as.data.frame(x)})
m_ganguly = melt(dr_ganguly[,grep("mu", names(dr_ganguly))], variable.name="year", value.name="sample")
#par(mfrow=c(1,2))
(ggplot(m_ganguly, aes(x=sample, color=year))+geom_density()+geom_vline(xintercept=mean(data.ganguly$runs),col=2)+
labs(x="Batting Average in tests")+ggtitle("Test batting average by year"))
# credible intervals to compare posterior Test batting averages by year/season
ci_ganguly = ddply(m_ganguly, .(year), summarize, lcl=quantile(sample, .025), ucl=quantile(sample, .975))
ci_ganguly$year = as.character(1996:2008)
(ggplot(ci_ganguly, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.ganguly$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
#####################################################################################
# For VVS Laxman
# Data processing for Saurav Ganguly
head(laxman)
lruns <- as.numeric(gsub('[*]','',laxman$Runs))
lpos <- laxman$Pos
ldism <- laxman$Dismissal
lopp <-gsub('[v ]','',laxman$Opposition)
lyear <- as.numeric(substr(laxman$`Start Date`,
nchar(laxman$`Start Date`)-4+1,
nchar(laxman$`Start Date`)))
#Index for the rows where runs are NA (did not bat)
index_na_l <- which(is.na(lruns), arr.ind=TRUE)
datal <-cbind(as.numeric(lruns),
as.numeric(lpos),
as.character(ldism),
as.character(lopp),
as.numeric(lyear))
#Final data for use
data.laxman <- data.frame(datal[-index_na_l,])
colnames(data.laxman) <- c("runs","position","dismissal","opposition","year")
#Check if there is any NA's
sum(is.na(data.laxman)) # =0 no NA
data.laxman$runs <- as.numeric(data.laxman$runs)
data.laxman$position <- as.numeric(data.laxman$position)
data.laxman$dismissal <- as.factor(data.laxman$dismissal)
data.laxman$opposition <- as.factor(data.laxman$opposition)
data.laxman$year <- as.factor(data.laxman$year)
# Check the data
head(data.laxman)
# Check the datatypes
str(data.laxman)
# Check the distribution of runs across years
# Boxplot
ggplot(data.laxman,aes(x=runs,y=year))+
geom_boxplot(aes(fill=year),show.legend = FALSE)
# Ridgeline plot
ggplot(data.laxman,aes(x=runs,y=year))+
geom_density_ridges(aes(fill=year))+ theme_ridges() +
theme(legend.position="none")
# Check the distribution of runs across oppositions
# Boxplot
ggplot(data.laxman,aes(x=runs,y=opposition))+
geom_boxplot(aes(fill=opposition),show.legend = FALSE)
# Ridgeline plot
ggplot(data.laxman,aes(x=runs,y=opposition))+
geom_density_ridges(aes(fill=opposition))+ theme_ridges() +
theme(legend.position="none")
hier_dat_laxman = list(n=nrow(data.laxman), y=data.laxman$runs,
nc=nlevels(as.factor(data.laxman$year)),
year=as.numeric(as.factor(data.laxman$year)))
hier_model_laxman = "
model {
for (i in 1:n) {
y[i] ~ dnorm(mu[year[i]], 1/sigma2[year[i]])
}
for (c in 1:nc) {
mu[c] ~ dnorm(theta,1/tau2)
sigma[c] ~ dunif(10,200)
}
sigma2 = sigma*sigma
theta ~ dnorm(50,0.0625)
tau2 = tau*tau
tau ~ dunif(10,100)
}
"
hier_m_laxman = jags.model(textConnection(hier_model_laxman), n.chains=3, hier_dat_laxman, quiet=TRUE)
hier_r_laxman = coda.samples(hier_m_laxman,
c("mu","sigma","theta","tau"),
50000)
summary(hier_r_laxman)
# plot to compare posterior Test batting average by season- densities
dr_laxman = ldply(hier_r_laxman, function(x) {as.data.frame(x)})
m_laxman = melt(dr_laxman[,grep("mu", names(dr_laxman))], variable.name="year", value.name="sample")
#par(mfrow=c(1,2))
(ggplot(m_laxman, aes(x=sample, color=year))+geom_density()+geom_vline(xintercept=mean(data.laxman$runs),col=2)+
labs(x="Batting Average in tests")+ggtitle("Test batting average by year"))
# credible intervals to compare posterior Test batting averages by year/season
ci_laxman = ddply(m_laxman, .(year), summarize, lcl=quantile(sample, .025), ucl=quantile(sample, .975))
ci_laxman$year = as.character(1996:2012)
(ggplot(ci_laxman, aes(x=lcl,xend=ucl,y=year,yend=year,col=year))+geom_segment(lwd=2)+
geom_vline(xintercept=mean(data.laxman$runs),col=2)+ coord_cartesian(xlim=c(5,85)) +
labs(x="Test Batting Average by year")+ggtitle("Test batting average by year"))
library(bayesplot)
library(mcmcOutput)
st <- mcmcOutput(hier_r1)
rd <- mcmcOutput(hier_r_dravid)
sg <- mcmcOutput(hier_r_ganguly)
lx <- mcmcOutput(hier_r_laxman)
data.st <- cbind(st$mu)
data.rd <- cbind(rep(0,nrow(data.rd)), #1989
rep(0,nrow(data.rd)), #1990
rep(0,nrow(data.rd)), #1991
rep(0,nrow(data.rd)), #1992
rep(0,nrow(data.rd)), #1993
rep(0,nrow(data.rd)), #1994
rep(0,nrow(data.rd)), #1995
rd$mu,                #1996 to 2012
rep(0,nrow(data.rd))) # 2013
data.sg <- cbind(rep(0,nrow(data.rd)), #1989
rep(0,nrow(data.rd)), #1990
rep(0,nrow(data.rd)), #1991
rep(0,nrow(data.rd)), #1992
rep(0,nrow(data.rd)), #1993
rep(0,nrow(data.rd)), #1994
rep(0,nrow(data.rd)), #1995
sg$mu,                #1996 to 2008
rep(0,nrow(data.rd)), #2009
rep(0,nrow(data.rd)), #2010
rep(0,nrow(data.rd)), #2011
rep(0,nrow(data.rd)), #2012
rep(0,nrow(data.rd))) #2013
st <- mcmcOutput(hier_r1)
rd <- mcmcOutput(hier_r_dravid)
sg <- mcmcOutput(hier_r_ganguly)
lx <- mcmcOutput(hier_r_laxman)
data.st <- cbind(st$mu)
data.rd <- cbind(rep(0,nrow(data.rd)), #1989
rep(0,nrow(data.rd)), #1990
rep(0,nrow(data.rd)), #1991
rep(0,nrow(data.rd)), #1992
rep(0,nrow(data.rd)), #1993
rep(0,nrow(data.rd)), #1994
rep(0,nrow(data.rd)), #1995
rd$mu,                #1996 to 2012
rep(0,nrow(data.rd))) # 2013
rd$mu
nrow(rd$mu)
data.rd <- cbind(rep(0,nrow(rd$mu)), #1989
rep(0,nrow(rd$mu)), #1990
rep(0,nrow(rd$mu)), #1991
rep(0,nrow(rd$mu)), #1992
rep(0,nrow(rd$mu)), #1993
rep(0,nrow(rd$mu)), #1994
rep(0,nrow(rd$mu)), #1995
rd$mu,                #1996 to 2012
rep(0,nrow(rd$mu))) # 2013
data.sg <- cbind(rep(0,nrow(sg$mu)), #1989
rep(0,nrow(sg$mu)), #1990
rep(0,nrow(sg$mu)), #1991
rep(0,nrow(sg$mu)), #1992
rep(0,nrow(sg$mu)), #1993
rep(0,nrow(sg$mu)), #1994
rep(0,nrow(sg$mu)), #1995
sg$mu,                #1996 to 2008
rep(0,nrow(sg$mu)), #2009
rep(0,nrow(sg$mu)), #2010
rep(0,nrow(sg$mu)), #2011
rep(0,nrow(sg$mu)), #2012
rep(0,nrow(sg$mu))) #2013
data.lx <- cbind(rep(0,nrow(lx$mu)), #1989
rep(0,nrow(lx$mu)), #1990
rep(0,nrow(lx$mu)), #1991
rep(0,nrow(lx$mu)), #1992
rep(0,nrow(lx$mu)), #1993
rep(0,nrow(lx$mu)), #1994
rep(0,nrow(lx$mu)), #1995
lx$mu,                #1996 to 2012
rep(0,nrow(lx$mu))) #2013
colnames(data.st) <- ci$year
colnames(data.rd) <- ci$year
colnames(data.sg) <- ci$year
colnames(data.lx) <- ci$year
combined <- rbind(mcmc_intervals_data(data.st, prob = 0.9, prob_outer = 0.9),
mcmc_intervals_data(data.rd, prob = 0.9, prob_outer = 0.9),
mcmc_intervals_data(data.sg, prob = 0.9, prob_outer = 0.9),
mcmc_intervals_data(data.lx, prob = 0.9, prob_outer = 0.9))
combined$player <- rep(c("Sachin",
"Dravid",
"Ganguly",
"Laxman"), each = 25)
pos <- position_nudge(y = ifelse(combined$player == "Sachin", 0.30,
ifelse(combined$player == "Dravid",0.15,
ifelse(combined$player == "Ganguly",0,-0.15))))
ggplot(combined, aes(x = m, y = parameter, color = player))+
geom_linerange(aes(xmin = l, xmax = h), position = pos, size=2)+
geom_linerange(aes(xmin = ll, xmax = hh), position = pos)+
geom_point(position = pos, aes(color=player))+
ylab("Year") + xlab("Average") + ggtitle("Averages by year")
pos <- position_nudge(y = ifelse(combined$player == "Sachin", 0.40,
ifelse(combined$player == "Dravid",0.20,
ifelse(combined$player == "Ganguly",0,-0.20))))
ggplot(combined, aes(x = m, y = parameter, color = player))+
geom_linerange(aes(xmin = l, xmax = h), position = pos, size=2)+
geom_linerange(aes(xmin = ll, xmax = hh), position = pos)+
geom_point(position = pos, aes(color=player))+
ylab("Year") + xlab("Average") + ggtitle("Averages by year")
pos <- position_nudge(y = ifelse(combined$player == "Sachin", 0.50,
ifelse(combined$player == "Dravid",0.25,
ifelse(combined$player == "Ganguly",0,-0.25))))
ggplot(combined, aes(x = m, y = parameter, color = player))+
geom_linerange(aes(xmin = l, xmax = h), position = pos, size=2)+
geom_linerange(aes(xmin = ll, xmax = hh), position = pos)+
geom_point(position = pos, aes(color=player))+
ylab("Year") + xlab("Average") + ggtitle("Averages by year")
pos <- position_nudge(y = ifelse(combined$player == "Sachin", 0.40,
ifelse(combined$player == "Dravid",0.20,
ifelse(combined$player == "Ganguly",0,-0.20))))
ggplot(combined, aes(x = m, y = parameter, color = player))+
geom_linerange(aes(xmin = l, xmax = h), position = pos, size=2)+
geom_linerange(aes(xmin = ll, xmax = hh), position = pos)+
geom_point(position = pos, aes(color=player))+
ylab("Year") + xlab("Average") + ggtitle("Averages by year")
